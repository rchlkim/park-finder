{"version":3,"sources":["components/Header.js","components/Post.js","components/Dropdown.js","components/Footer.js","images/CoverImg.jpeg","components/Cover.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Post","props","handleChange","bind","parks","name","text","event","console","log","target","value","this","setName","setState","a","getParksByActivity","then","map","React","Component","activity","axios","get","result","data","i","length","fullName","error","Dropdown","state","submitted","handleSubmit","activities","alert","preventDefault","fetchActivities","onSubmit","onChange","item","type","Footer","class","Cover","src","cover","alt","App","myRef","createRef","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b913f6a9.chunk.js","sourcesContent":["import React from 'react'\nimport './Header.css'\n\nconst Header = () => {\n    return (\n        <div className = \"header\">\n            <h1>National Park Finder</h1>\n        </div>\n    )\n}\n\nexport default Header","import React from \"react\";\nimport axios from 'axios';\nimport './Post.css'\n\nclass Post extends React.Component {\n    constructor(props) {\n      super(props);\n      this.handleChange = this.handleChange.bind(this);\n      this.parks = [{name: \"Loading...\", text: \"Loading...\"}];\n    }\n\n    handleChange(event) {\n        if (event !== \"temp\") { // in order to update the dropdown w/o rendering again\n            console.log(event.target.value);\n            this.setName({value: event.target.name});\n        } else {\n            this.setState({value: \"trubbo\"});\n        }\n    }\n\n    async componentDidMount() {\n        var parks; // API call\n        await getParksByActivity('AUTO').then(\n            value => {parks = value;}\n        );\n        this.parks = parks;\n        this.handleChange(\"temp\"); // workaround for updating dropdown\n    }\n\n    render() {\n        return (\n            <div>\n              <div className=\"container\">\n                {this.parks.map((parks) => {\n                    return <h2>{parks.name}</h2>\n                })}\n              </div>\n            </div>\n        );\n    }\n}\n\nexport default Post;\n\n\nasync function getParksByActivity(activity) {\n    try {\n        const result = await axios.get('https://developer.nps.gov/api/v1/activities/parks?api_key=3wTW9Ux6Gxbdv4iCtJabaCAzUyjap93TgfQR5XwP&q=' + activity);\n        let data = result.data['data'][0].parks;\n\n        var parks = [];\n        for (let i = 0; i < data.length; i++) {\n          parks[i] = {\n            name: data[i].fullName, text: 'Hello'\n          }\n        }\n        return parks;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nasync function getParkInfo() {\n    try {\n        const result = await axios.get('https://developer.nps.gov/api/v1/parks?api_key=3wTW9Ux6Gxbdv4iCtJabaCAzUyjap93TgfQR5XwP');\n        let data = result.data['data'];\n\n        var parkInfo = [];\n        for (let i = 0; i < data.length; i++) {\n            parkInfo[i] = {\n                name: data[i].fullName, description: data[i].description\n            }\n        }\n        return parkInfo;\n    } catch (error) {\n        console.error(error);\n    }\n}","import React from 'react';\nimport axios from 'axios';\nimport Post from './Post';\n\nclass Dropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 'coconut',\n      submitted: 'false'\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.submitted = false;\n    this.activities = [{value : \"Arts and Culture\", text : \"Arts and Culture\"}, {value: \"Junior Ranger Program\", text : \"Junior Ranger Program\"},\n     {value : \"Loading...\", text : \"Loading...\"}];\n  }\n\n  handleChange(event) {\n    if (event !== \"temp\") { // in order to update the dropdown w/o rendering again\n      console.log(event.target.value);\n      this.setState({value: event.target.value});\n    } else {\n      this.setState({value: \"Arts and Culture\"});\n    }\n  }\n\n  handleSubmit(event) {\n    alert('You chose: ' + this.state.value);\n    event.preventDefault();\n    this.setState({submitted: 'true'});\n  }\n\n  async componentDidMount() {\n    var activities; // API call\n    await fetchActivities().then(\n      value => {activities = value;}\n    );\n    this.activities = activities;\n    this.handleChange(\"temp\"); // workaround for updating dropdown\n  }\n\n  render() {\n    const submitted = this.state.submitted;\n    if (submitted == 'true') {\n      return <Post />;\n    } else {\n      return (\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Select Activity:   \n            <select value={this.state.value} onChange={this.handleChange}>\n              {this.activities.map(item => {\n                return (<option key={item.value} value={item.value}>{item.text}</option>);\n              })}\n            </select>\n          </label>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      );\n    }\n  }\n}\n\nexport default Dropdown \n\nasync function fetchActivities() {\n  try {\n    const result = await axios.get(\"https://developer.nps.gov/api/v1/activities?api_key=3wTW9Ux6Gxbdv4iCtJabaCAzUyjap93TgfQR5XwP\");\n    let data = result.data['data'];\n\n    var activities = [];\n    for (let i = 0; i < data.length; i++) {\n      activities[i] = {\n        value: data[i].name, text: data[i].name\n      }\n    }\n    return activities;\n\n  } catch (error) {\n    console.error(error);\n  }\n}","import React from 'react'\nimport './Footer.css'\nimport Dropdown from './Dropdown'\n\nconst Footer = () => {\n    return (\n        <div className = \"footer\">\n            <h1> Welcome! </h1>\n            <h2> To get started, select an activity you wish to do at a national park. </h2>\n            <div className = \"dropdown\">\n                <Dropdown class=\"dropdown\"/>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer","export default __webpack_public_path__ + \"static/media/CoverImg.c675c8fb.jpeg\";","import React from 'react';\nimport cover from '../images/CoverImg.jpeg';\nimport './Cover.css'\n\nconst Cover = () => {\n  return (\n      <div className = \"cover\">\n          <img src={cover} alt=\"img\" />\n      </div>\n  )\n}\n\nexport default Cover;","import './App.css'\nimport React from 'react'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Cover from './components/Cover'\nimport Dropdown from './components/Dropdown'\nimport Post from './components/Post'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.myRef = React.createRef();\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n          <Cover />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}